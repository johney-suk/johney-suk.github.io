{"componentChunkName":"component---src-templates-post-jsx","path":"/test2/","result":{"data":{"site":{"siteMetadata":{"title":"joni.blog"}},"markdownRemark":{"id":"85ed623e-db73-5ff5-b761-86a4b0ebc2b9","excerpt":"서론 최근 회사내 인증 서버를 구축하여 프로젝트 진행 과정동안 공부한 내용을 정리했습니다. 이 프로젝트의 주요 목표는 OAuth 2.0, OpenID Connect를 활용하여 API서버간 안전하고 확장 가능한 인증 시스템을 만드는 것입니다. 이 글에서는 OAuth 2.0과 OpenID Connect의 개념, 그리고 OpenIddict 적용 방법에 대해 공…","html":"<h2>서론</h2>\n<p>최근 회사내 인증 서버를 구축하여 프로젝트 진행 과정동안 공부한 내용을 정리했습니다. 이 프로젝트의 주요 목표는 OAuth 2.0, OpenID Connect를 활용하여 API서버간 안전하고 확장 가능한 인증 시스템을 만드는 것입니다. 이 글에서는 OAuth 2.0과 OpenID Connect의 개념, 그리고 OpenIddict 적용 방법에 대해 공부하고 정리한 내용을 포스팅하겠습니다.</p>\n<h2>인증 방식 프로세스</h2>\n<ul>\n<li>사전에 개별 제공된 인증 정보로서 인증 서버를 통해 인증을 거쳐야 한다.</li>\n<li>인증 성공 시 인증 서버로 부터 발급 받은 Access Token을 API 서버 연동 호출 시에 HTTP 헤더에 포함시킨다.</li>\n<li>API 서버는 외부 API 서버로 전달 받은 토큰 정보를 이용하여 토큰의 적합성 검사를 진행 한 후 토큰이 정상일 경우 API를 호출하여 그 Response를 외부 API 서버에 반환 한다.</li>\n</ul>\n<h2>인증서버 구축의 주요 목표</h2>\n<ul>\n<li>보안 강화</li>\n<li>규제 준수</li>\n<li>확장성과 유연성</li>\n<li>중앙 집중식 사용자(외부서버) 관리</li>\n</ul>\n<h2>다음</h2>","frontmatter":{"title":"[정리] 인증서버 구축22","date":"May 16, 2024","update":"May 16, 2024","tags":["인증/인가22","프로젝트22"],"series":"인증서버 개념과 동작 원리22"},"fields":{"slug":"/test2/","readingTime":{"minutes":1.53}}},"seriesList":{"edges":[{"node":{"id":"85ed623e-db73-5ff5-b761-86a4b0ebc2b9","fields":{"slug":"/test2/"},"frontmatter":{"title":"[정리] 인증서버 구축22"}}}]},"previous":{"fields":{"slug":"/intro/"},"frontmatter":{"title":"[정리] 인증서버 구축"}},"next":{"fields":{"slug":"/persistence/"},"frontmatter":{"title":"Persist Option 데이터 영구 저장하기 AOF, RDB"}}},"pageContext":{"id":"85ed623e-db73-5ff5-b761-86a4b0ebc2b9","series":"인증서버 개념과 동작 원리22","previousPostId":"37783677-24c0-5a1c-b645-1f516f29ae90","nextPostId":"0a4678af-1a08-5241-a7ef-eae70f3d5b0f"}},"staticQueryHashes":[],"slicesMap":{}}